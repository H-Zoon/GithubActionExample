  # 워크플로우의 이름 지정.
  name: Android CD

  # develop 브랜치에 대해서만 pull request 가 발생했을 때 실행하도록 설정.
  on:
    pull_request:
      branches: [ develop ]

  # 액션 기본단위인 job 설정.
  # Ubuntu latest 버전을 사용하여 실행.
  jobs:
    build:
      runs-on: ubuntu-latest

      #step 속성을 통해 작업 순서 정의. 각 작업(job)은 하나 이상의 단계 (step)으로 정의
      # 각 단계 앞에 반드시 - 명시
      #워크플로우가 레포지토리에 접근할 수 있게 checkout
      steps:
        # 워크스페이스를 체크아웃. v3 버전 사용.
        - uses: actions/checkout@v3
          with:
            # 이전 commit 기록들까지 모두 가져오기 위해서 fetch-depth를 0으로 설정.
            fetch-depth: 0

        #안드로이드 프로젝트 빌드를 위한 기본 셋팅
        # JDK 17을 설정.
        - name: Setup JDK 17
          uses: actions/setup-java@v3
          with:
            distribution: "zulu"
            java-version: 17

        # 안드로이드 SDK 설정.
        - name: Setup Android SDK
          uses: android-actions/setup-android@v2

        # Gradle 패키지 캐시.
        - name: Cache Gradle packages
          uses: actions/cache@v3
          with:
            path: |
              ~/.gradle/caches
              ~/.gradle/wrapper
            key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties', '**/buildSrc/**/*.kt') }}
            restore-keys: |
              ${{ runner.os }}-gradle-

        # gradlew 파일에 실행 권한 부여.
        - name: Grant execute permission for gradlew
          run: chmod +x gradlew

        # 비밀 정보를 저장한 secrets.tar.gpg 파일을 복호화.
        # 테스트 환경에서는 해당 파일 없음으로 주석
        #- name: Decrypt secrets.tar.gpg
        #  run: gpg --quiet --batch --yes --always-trust --decrypt --passphrase="$SECRET_GPG_PASSWORD" --output secrets.tar secrets.tar.gpg
        #  env:
        #    # GitHub Secrets에서 비밀 정보를 가져와 사용.
        #    SECRET_GPG_PASSWORD: ${{ secrets.SECRET_GPG_PASSWORD }}

        # secrets.tar 파일을 해제.
        #- name: Unzip secrets.tar
        #  run: tar xvf secrets.tar

        # ktlint, detekt 사용하기 위해서는 프로젝트 단위 gradle 에서 해당 라이브러리 import 필요

        # ktlint 실행.
        - name: Run ktlint
          run: ./gradlew ktlintCheck

        # detekt 실행.
        - name: Run detekt
          run: ./gradlew detekt

        # 유닛 테스트 실행.
        - name: Run unit tests
          run: ./gradlew testDebugUnitTest

        # 릴리스 APK 빌드.
        - name: Build assemble release apk
          run: ./gradlew assembleRelease

        # 안드로이드 테스트 보고서를 생성.
        - name: Create android test report
          uses: asadmansr/android-test-report-action@v1.2.0
          if: ${{ always() }} # 항상 실행.

        # 릴리스 APK.
        - name: Build assemble release apk
          run: ./gradlew assembleRelease
